@startuml
left to right direction
skinparam packageStyle rectangle

'----------------------------------------------------------------------
:Attendee: as attendee_find_groups

rectangle "Data Interface" as finding_group_data_interface {
	:LFG Post Store: as finding_group_post_store
	:Attendee Store: as finding_group_attendee_store
}

rectangle "User Interface" as finding_group_UI {
	rectangle "Find Groups" {
		attendee_find_groups --> (Find group)
		attendee_find_groups --> (Join group)
		attendee_find_groups --> (Leave group)
	}
}

rectangle "Application" as finding_group_application {
	(Filter groups) << Service >> as finding_group_filter_groups
	(Find group) --> (finding_group_filter_groups)
	(finding_group_filter_groups) <-- finding_group_post_store

	(Add subscriber to event) << Service >>
	(Join group) --> (Add subscriber to event)
	(Add subscriber to event) <-> finding_group_attendee_store

	(Remove subscriber from event) << Service >>
	(Leave group) --> (Remove subscriber from event)
	(Remove subscriber from event) --> finding_group_attendee_store

}

'----------------------------------------------------------------------
:Attendee: as attendee_modify_preferences

rectangle "Data Interface" as modify_preferences_data_interface {
	:Attendee Preferences Store: as modify_preferences_attendee_preferences_store
}

rectangle "User Interface" as modify_preferences_UI {
	rectangle "Modify Preferences" {
		attendee_modify_preferences --> (Modify quiet hours)
		attendee_modify_preferences --> (Change notification preferences)
		attendee_modify_preferences --> (Block user)
	}
}

rectangle "Application" as modify_preferences_application {
	(Modify quiet hours) --> (Update preferences)
	(Block user) --> (Update preferences)
	(Change notification preferences) -> (Update preferences)
	(Update preferences) << Service >>
	(Update preferences) --> modify_preferences_attendee_preferences_store

}

'----------------------------------------------------------------------
:LFG Post Creator: as post_creator
:Attendee: as manage_group_attendee

rectangle "Data Interface" as manage_group_data_interface {
	:LFG Post Store: as manage_group_LFG_post_store
	:Attendee Store: as manage_group_attendee_store
	:Attendee Preferences Store: as manage_group_attendee_preferences_store
}

rectangle "User Interface" as manage_group_UI {
	rectangle "Manage Group" {
		post_creator --> (Post new LFG)
		post_creator --> (Remove post)
		post_creator --> (Change post info)
	}
	(Notification) as manage_group_notification
	manage_group_notification -> manage_group_attendee
}

rectangle "Application" as manage_group_application {
	(Create LFG post) << Service >>
	(Post new LFG) --> (Create LFG post)
	(Create LFG post) <-> manage_group_LFG_post_store

	(Delete LFG post) << Service >>
	(Remove post) --> (Delete LFG post)
	(Delete LFG post) --> manage_group_LFG_post_store
	(Enumerate subscribed users) << Service >> as manage_group_enumerate_subscribed_users
	(Delete LFG post) .> (manage_group_enumerate_subscribed_users)
	(Notification publisher) << Service >> as manage_group_notification_publisher
	(Delete LFG post) --> (manage_group_notification_publisher)
	(manage_group_notification_publisher) <-- manage_group_attendee_store
	(manage_group_notification_publisher) <-- manage_group_attendee_preferences_store
	(manage_group_notification_publisher) --> manage_group_notification

	(Change LFG post) << Service >>
	(Change post info) --> (Change LFG post)
	(Change LFG post) <--> manage_group_LFG_post_store
	(Change LFG post) .> (manage_group_enumerate_subscribed_users)
	(Change LFG post) --> (manage_group_notification_publisher)

	(manage_group_enumerate_subscribed_users) <-- manage_group_attendee_store
}

'----------------------------------------------------------------------
:Attendee: as event_alarm_attendee
:Event Alarm: << Daemon >>

rectangle "Data Interface" as event_alarm_data_interface {
	:Attendee Store: as event_alarm_attendee_store
	:Attendee Preferences Store: as event_alarm_attendee_preferences_store
}

rectangle "User Interface" as event_alarm_UI {
	(Notification) as event_alarm_notification
	event_alarm_notification -> event_alarm_attendee
}

rectangle "Application" as event_alarm_application {
	(Notification publisher) << Service >> as event_alarm_notification_publisher
	event_alarm_notification_publisher --> event_alarm_attendee_store
	event_alarm_notification_publisher --> event_alarm_attendee_preferences_store

	:Event Alarm: --> event_alarm_notification_publisher
	event_alarm_notification_publisher --> event_alarm_notification
}

@enduml